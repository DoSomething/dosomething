<?php
/**
 * @file
 * Installation and schema hooks for dosomething_gladiator.module.
 */

/**
 * Implements hook_schema().
 */
function dosomething_gladiator_schema() {
  $schema = array();
   $schema['dosomething_gladiator_failed_task_log'] = array(
    'description' => 'Table of failed users migrated to gladiator.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of log table.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'mail' => array(
        'description' => 'The {users}.mail.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '255',
      ),
      'nid' => array(
        'description' => 'Campaign nid for the signup',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'run_nid' => array(
        'description' => 'Campaign run nid for the signup',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp of the request.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'response_code' => array(
        'description' => 'The HTTP response code from Gladiator',
        'type' => 'int',
        'default' => 0,
      ),
      'response_values' => array(
        'description' => 'The JSON response from Gladiator',
        'type' => 'text',
        'length' => '500000',
        'not null' => FALSE,
        'default' => NULL,
      ),
    ),
    'primary key' => array('id'),
  );
   return $schema;
 }

/**
 * Create failed task log table.
 */
function dosomething_gladiator_update_7001(&$sandbox) {
  $table_name = 'dosomething_gladiator_failed_task_log';
  $schema = dosomething_gladiator_schema();
  db_create_table($table_name, $schema[$table_name]);
}

/**
 * Add response code and json encoded response to the log.
 */
function dosomething_gladiator_update_7002(&$sandbox) {
  $fields = ['response_code', 'response_values'];
  // Tables to add remote_addr to.
  $table = 'dosomething_gladiator_failed_task_log';
  // Load schema for field definitions.
  $schema = dosomething_gladiator_schema();
  foreach ($fields as $field) {
    // If the field doesn't exist already:
    if (!db_field_exists($table, $field)) {
      // Add it per the schema field definition.
      db_add_field($table, $field, $schema[$table]['fields'][$field]);
    }
  }
}

/**
 * Update response values to be a medium text field, as the response is medium-long.
 */
function dosomething_gladiator_update_7003(&$sandbox) {
  $field = 'response_values';
  $table = 'dosomething_gladiator_failed_task_log';
  // Update the field to a large text.
  db_change_field($table, $field, $field, array(
    'description' => 'The JSON response from Gladiator',
    'type' => 'text',
    'length' => '500000',
    'not null' => FALSE,
    'default' => NULL,
    )
  );
}

/**
 * Remove dosomething_gladiator_failed_task_log table
 */
function dosomething_gladiator_update_7004(&$sandbox) {
  $table = 'dosomething_gladiator_failed_task_log';

  if (db_table_exists($table)) {
    db_drop_table($table);
  }
}
