<?php

include_once('dosomething_helpers.theme.inc');
include_once('dosomething_helpers.strongarm.inc');

/**
 * Implements hook_ctools_plugin_api().
 */
function dosomething_helpers_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "strongarm" && $api == "strongarm") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_form_alter().
 */
function dosomething_helpers_form_alter(&$form, &$form_state, $form_id) {
  // If we are on a node add/edit form.
  if (array_key_exists('#node_edit_form', $form)) {
    // Add css to alter all node forms.
    drupal_add_css(drupal_get_path('module', 'dosomething_helpers') . '/dosomething_helpers_nodeform.css');
    drupal_add_js(drupal_get_path('module', 'dosomething_helpers') . '/dosomething_helpers_nodeform.js');
  }
}

/**
 * Gets node nid's that reference the given $nid in a given $field_name.
 *
 * @param int $nid
 *  The node nid value stored as the given field's target_id.
 * @param string $field_name
 *  The machine name of the entityreference field to look for parents.
 *
 * @return mixed
 *  Array of entity objects (not loaded).  FALSE if no parents found.
 */
function dosomething_helpers_get_entityref_parents($nid, $field_name) {
  $query = new EntityFieldQuery;
  $result = $query->entityCondition('entity_type', 'node')
    ->fieldCondition($field_name, 'target_id', $nid)
    ->execute();
  if (isset($result['node'])) {
    return $result['node'];
  }
  return NULL;
}

/**
 * Returns links to nodes that reference a given $nid with given $field_name.
 *
 * @param int $nid
 *  The node nid value stored as the given field's target_id.
 * @param string $field_name
 *  The machine name of the entityreference field to look for parents.
 *
 * @return string
 *   Markup of results.
 */
function dosomething_helpers_get_entityref_parent_list($nid, $field_name) {
  if ($parents = dosomething_helpers_get_entityref_parents($nid, $field_name)) {
    $header = array('Title', 'Type', 'Published', 'Created');
    foreach ($parents as $parent) {
      $node = node_load($parent->nid);
      $rows[] = array(
        l($node->title, 'node/' . $parent->nid),
        $node->type,
        $node->status,
        format_date($node->created, 'short'),
      );
    }
    return theme('table', array('header' => $header, 'rows' => $rows));
  }
  else {
    return t("Not referenced in @field.", array('@field' => $field_name));
  }
}

/**
 * Adds links to a node's content displaying instances in $field_name.
 *
 * @param object $node
 *  The node, passed from a hook_node_view.
 * @param array $fields
 *  Array of machine name of fields to check for.
 */
function dosomething_helpers_add_entityref_links(&$node, $fields) {
  $i = 30;
  foreach ($fields as $fld) {
    $node->content[$fld] = array(
      '#prefix' => '<div><h3>' . $fld .'</h3>',
      '#suffix' => '</div>',
      '#markup' => dosomething_helpers_get_entityref_parent_list($node->nid, $fld),
      '#weight' => $i,
    );
    $i = $i + 10;
  }
}

/**
 * Implements hook_preprocess_html().
 */
function dosomething_helpers_preprocess_html(&$vars) {
  $dmoz_meta_tag = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'robots',
      'content' => 'NOODP'
    )
  );

  drupal_add_html_head($dmoz_meta_tag, 'dmoz_meta_tag');
}
