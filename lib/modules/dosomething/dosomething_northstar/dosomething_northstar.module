<?php

use DoSomething\Gateway\Northstar;
use Phoenix\Auth\PhoenixOAuthBridge;

/**
 * @file
 * Code for the dosomething_northstar module.
 */

include_once 'dosomething_northstar.features.inc';
include_once('dosomething_northstar.admin.inc');
include_once('dosomething_northstar.auth.inc');

define('NORTHSTAR_URL', variable_get('dosomething_northstar_url', 'http://northstar.dev:8000'));

/**
 * Get a configured instance of the Northstar client.
 *
 * @return DoSomething\Gateway\Northstar
 */
function dosomething_northstar_client() {
  return new Northstar([
    'grant' => 'client_credentials',
    'url' => NORTHSTAR_URL,
    'bridge' => PhoenixOAuthBridge::class,
    'client_credentials' => [
      'client_id' => variable_get('dosomething_northstar_app_id', 'trusted-test-client'),
      'client_secret' => variable_get('dosomething_northstar_app_key', 'secret1'),
      'scope' => ['admin', 'user'],
    ],
  ]);
}

/**
 * Implements hook_menu().
 */
function dosomething_northstar_menu() {
  return [
    'admin/config/services/northstar' => [
      'title' => 'Northstar',
      'description' => 'Manage Northstar connection settings.',
      'page callback' => 'drupal_get_form',
      'page arguments' => ['dosomething_northstar_config_form'],
      'access arguments' => ['administer modules'],
      'file' => 'dosomething_northstar.admin.inc',
    ],
    'user/authorize' => [
      'title' => 'openid connect authorize',
      'page callback' => 'dosomething_northstar_openid_authorize',
      'access arguments' => ['access content'],
      'type' => MENU_CALLBACK,
    ],
  ];
}

/**
 * Verify the given credentials against Northstar, returning the authorized
 * user account if one exists.
 *
 * @param  array $credentials
 * @return array|null
 */
function dosomething_northstar_verify_user($credentials) {
  global $user;

  try {
    $response = dosomething_northstar_client()->post('v1/auth/verify', $credentials);
    $code = 200;
  }
  catch (Exception $error) {
    watchdog('dosomething_northstar', 'User NOT verified by Northstar: ' . $error->getMessage(), NULL, WATCHDOG_ERROR);

    $response = NULL;
    $code = dosomething_northstar_get_error_code($error->getMessage());
  }

  // Add to request log if enabled.
  dosomething_northstar_log_request('verify_user', $user, $credentials, $response, $code);

  return $response;
}

/**
 * Send user registration events to northstar.
 *
 * @param  object $user - Drupal user object
 * @param  string $password - Unhashed password provided during registration.
 * @return array|null
 */
function dosomething_northstar_create_user($user, $password = null) {
  $payload = dosomething_northstar_transform_user($user, $password);

  try {
    $response = dosomething_northstar_client()->post('v1/users', $payload);
    $code = 201;
  }
  catch (Exception $error) {
    watchdog('dosomething_northstar', 'User NOT migrated to Northstar: ' . $error->getMessage(), NULL, WATCHDOG_ERROR);

    $response = NULL;
    $code = dosomething_northstar_get_error_code($error->getMessage());
  }

  // Save the newly registered user's ID to their local profile field.
  dosomething_northstar_save_id_field($user->uid, $response);

  // Add to request log if enabled.
  dosomething_northstar_log_request('register_user', $user, $payload, $response, $code);

  if (module_exists('stathat')) {
    stathat_send_ez_count('drupal - Northstar - user migrated - count', 1);
  }

  return $response;
}

/**
 * Update a user's existing Northstar profile based on their Drupal ID.
 *
 * @param  object $user - Drupal user object
 * @param  string $password - Unhashed password provided during registration.
 * @return array|null
 */
function dosomething_northstar_update_user($user, $password = null) {
  $payload = dosomething_northstar_transform_user($user, $password);

  try {
    $response = dosomething_northstar_client()->put('v1/users/drupal_id/' . $user->uid, $payload);
    $code = 200;
  }
  catch (Exception $error) {
    watchdog('dosomething_northstar', 'User NOT updated on Northstar: ' . $error->getMessage(), NULL, WATCHDOG_ERROR);

    $response = NULL;
    $code = dosomething_northstar_get_error_code($error->getMessage());
  }

  // Add to request log if enabled.
  dosomething_northstar_log_request('update_user', $user, $payload, $response, $code);

  if (module_exists('stathat')) {
    stathat_send_ez_count('drupal - Northstar - user updated - count', 1);
  }

  return $response;
}

/**
 * Return error code from error message.
 * @todo  This is temporary until an update is made to the Gateway response.
 *
 * @param  string $errorMessage
 * @return integer|null
 */
function dosomething_northstar_get_error_code($errorMessage) {
  preg_match('/(\[\d{3}\])/', $errorMessage, $matches);

  if ($matches) {
    return (int) substr($matches[0], 1, 3);
  }

  return NULL;
}

/**
 * Get user profile data from Northstar by the specified ID.
 *
 * @param  string $id
 * @param  string $type
 * @return DoSomething\Gateway\Resources\NorthstarUser|null
 */
function dosomething_northstar_get_user($id, $type = 'id') {
  // Prefer using user's Northstar ID.
  if ($type === 'drupal_id') {
    $northstar_id = dosomething_user_get_northstar_id($id);

    if ($northstar_id) {
      $type = 'id';
      $id = $northstar_id;
    }
  }

  $cache_bin = 'cache_dosomething_northstar';
  $cache_key = 'northstar_user_'.$type.'='.$id;

  $northstar_user = cache_get($cache_key, $cache_bin);

  // Return cached northstar user data.
  if ($northstar_user) {
    return $northstar_user->data;
  }

  $northstar_user = dosomething_northstar_client()->getUser($type, $id);

  if ($northstar_user) {
    cache_set($cache_key, $northstar_user, $cache_bin, REQUEST_TIME + 60*60*24);

    return $northstar_user;
  }

  // Northstar user not found.
  $error = sprintf("Error fetching Northstar user data for user with drupal_id = %d.", $id);
  watchdog_exception('northstar', new Exception($error));

  return NULL;
}

/**
 * Transform Drupal user fields into the appropriate schema for Northstar.
 *
 * @param $user - Drupal user object
 * @param $password - Unhashed password provided during registration.
 * @return array
 */
function dosomething_northstar_transform_user($user, $password = null) {
  // Optional fields
  $optional = [
    'birthdate' => 'field_birthdate',
    'first_name' => 'field_first_name',
    'last_name' => 'field_last_name',
  ];

  // Address fields
  $address = [
    'country' => 'country',
    'addr_street1' => 'thoroughfare',
    'addr_street2' => 'premise',
    'addr_city' => 'locality',
    'addr_state' => 'administrative_area',
    'addr_zip' => 'postal_code',
  ];

  $northstar_user = [
    'email'         => $user->mail,
    'mobile'        => dosomething_user_get_field('field_mobile', $user),
    'drupal_id'     => $user->uid,
    'language'      => $user->language,
    'created_at'    => $user->created,
  ];

  // Set values in ns_user if they are set.
  foreach ($optional as $ns_key => $drupal_key) {
    $field = $user->$drupal_key;
    if (isset($field[LANGUAGE_NONE][0]['value'])) {
      $northstar_user[$ns_key] = $field[LANGUAGE_NONE][0]['value'];
    }
  }
  foreach ($address as $ns_key => $drupal_key) {
    $field = $user->field_address[LANGUAGE_NONE][0];

    if ($drupal_key == 'country') {
      $northstar_user[$ns_key] = $field[$drupal_key];
    } else if (isset($field[$drupal_key]['value'])) {
      $northstar_user[$ns_key] = $field[$drupal_key]['value'];
    }
  }

  // Provide either the hashed or unhashed password, depending on which is given.
  // If we only have hashed password, we can send that in the 'drupal_password'
  // field and Northstar can then verify via its DrupalPasswordHash class.
  if (! is_null($password)) {
    $northstar_user['password'] = $password;
  }

  // If user has a "1234565555@mobile" or "1234565555@mobile.import" placeholder
  // email address, don't send that field to Northstar (since it's made-up and
  // Northstar doesn't require every account to have an email like Drupal does).
  if(preg_match('/@mobile(\.import)?$/', $northstar_user['email'])) {
    unset($northstar_user['email']);
  }

  // Set the "source" for this user to Phoenix if they weren't
  // programmatically created through the API.
  if(empty($northstar_user['source'])) {
    $northstar_user['source'] = 'phoenix';
  }

  return $northstar_user;
}

/**
 * Save the user's Northstar ID to their local profile field and the authmap.
 *
 * @param string $uid - Drupal user ID
 * @param array $northstar_response - Northstar user JSON response
 */
function dosomething_northstar_save_id_field($uid, $northstar_response) {
  $northstar_id = !empty($northstar_response['data']['id']) ? $northstar_response['data']['id'] : null;
  $user = user_load($uid);

  // Save a record to the `authmap` table if Northstar user exists:
  user_set_authmaps($user, ['authname_openid_connect_northstar' => $northstar_id]);

  // Save the `field_northstar_id`:
  $edit = [];
  dosomething_user_set_fields($edit, ['northstar_id' => $northstar_id]);
  user_save($user, $edit);
}

/**
 * If the log is enabled, log this request to the database.
 *
 * @param string $op - label for the operation being performed
 * @param object $user - the Drupal user
 * @param array $request_body - the body of the request
 * @param array $response - response JSON
 * @param integer|null $code
 */
function dosomething_northstar_log_request($op, $user, $request_body, $response, $code = NULL) {
  if (!variable_get('dosomething_northstar_log')) return;

  // Don't log plaintext passwords.
  if (isset($request_body['password'])) {
    $request_body['password'] = '*****';
  }

  db_insert('dosomething_northstar_request_log')
    ->fields([
      'op' => $op,
      'uid' => $user->uid,
      'user_lang' => $user->language,
      'user_country' => $user->field_address[LANGUAGE_NONE][0]['country'],
      'fastly_country' => dosomething_settings_get_geo_country_code(),
      'request_values' => json_encode($request_body),
      'response_code' => $code,
      'response_values' => json_encode($response),
    ])
    ->execute();
}

/**
 * Return whether the response has a "successful" status code or not.
 *
 * @param $response
 * @return bool
 */
function _dosomething_northstar_is_successful_response($response) {
  $code = (int) $response->code;

  return $code >= 200 && $code <= 299;
}

/**
 * Build the drupal_http_request object for Northstar calls.
 *
 * @throws InvalidArgumentException
 */
function _dosomething_northstar_build_http_client() {
  throw new InvalidArgumentException('Removed. Use dosomething_northstar_client() instead.');
}
