<?php

/**
 * @file
 * Code for the dosomething_northstar module.
 */

include_once('dosomething_northstar.admin.inc');

// Config vars, if not set.
define('NORTHSTAR_URL', variable_get('dosomething_northstar_url', 'http://northstar.dev'));
define('NORTHSTAR_PORT', variable_get('dosomething_northstar_port', '8000'));
define('NORTHSTAR_VERSION', variable_get('dosomething_northstar_version', 'v1'));
define('NORTHSTAR_APP_ID', variable_get('dosomething_northstar_app_id', '456'));
define('NORTHSTAR_APP_KEY', variable_get('dosomething_northstar_app_key', 'abc4324'));

/**
 * Implements hook_menu().
 */
function dosomething_northstar_menu() {
  return [
    'admin/config/services/northstar' => [
      'title' => 'Northstar',
      'description' => 'Manage Northstar connection settings.',
      'page callback' => 'drupal_get_form',
      'page arguments' => ['dosomething_northstar_config_form'],
      'access arguments' => ['administer modules'],
      'file' => 'dosomething_northstar.admin.inc',
    ]
  ];
}

/**
 * Verify the given credentials against Northstar, returning the authorized
 * user account if one exists.
 *
 * @param array $credentials
 * @return mixed|null
 */
function dosomething_northstar_verify_user($credentials) {
  global $user;
  $client = _dosomething_northstar_build_http_client();

  $response = drupal_http_request($client['base_url'] . '/auth/verify', [
    'headers' => $client['headers'],
    'method' => 'POST',
    'data' => json_encode($credentials),
  ]);

  // Add to request log if enabled.
  dosomething_northstar_log_request('verify_user', $user, $credentials, $response);

  if (!_dosomething_northstar_is_successful_response($response)) {
    return null;
  }

  return json_decode($response->data);
}

/**
 * Send user registration events to northstar.
 *
 * @param $user - Drupal user object
 * @param $password - Unhashed password provided during registration.
 */
function dosomething_northstar_create_user($user, $password = null) {
  $client = _dosomething_northstar_build_http_client();
  $payload = dosomething_northstar_transform_user($user, $password);

  $response = drupal_http_request($client['base_url'] . '/users', [
    'headers' => $client['headers'],
    'method' => 'POST',
    'data' => json_encode($payload),
  ]);

  // Save the newly registered user's ID to their local profile field.
  dosomething_northstar_save_id_field($user->uid, json_decode($response->data));

  // Add to request log if enabled.
  dosomething_northstar_log_request('register_user', $user, $payload, $response);

  if (! _dosomething_northstar_is_successful_response($response)) {
    watchdog('dosomething_northstar', 'User not migrated : ' . $response->code, NULL, WATCHDOG_ERROR);
    return;
  }

  if (module_exists('stathat')) {
    stathat_send_ez_count('drupal - Northstar - user migrated - count', 1);
  }
}

/**
 * Update a user's existing Northstar profile based on
 * their Drupal ID.
 *
 * @param $user - Drupal user object
 * @param $password - Unhashed password provided during registration.
 */
function dosomething_northstar_update_user($user, $password = null) {
  $client = _dosomething_northstar_build_http_client();
  $payload = dosomething_northstar_transform_user($user, $password);

  $response = drupal_http_request($client['base_url'] . '/users/drupal_id/' . $user->uid, [
    'headers' => $client['headers'],
    'method' => 'PUT',
    'data' => json_encode($payload),
  ]);

  // Add to request log if enabled.
  dosomething_northstar_log_request('update_user', $user, $payload, $response);

  if (_dosomething_northstar_is_successful_response($response)) {
    if (module_exists('stathat')) {
      stathat_send_ez_count('drupal - Northstar - user updated - count', 1);
    }
  }
  elseif ($response->code === '404') {
    // If the given Drupal ID 404s, try to register them.
    $password_or_null = ! empty($form_state['values']['pass']) ? $form_state['values']['pass'] : null;
    dosomething_northstar_create_user($user, $password_or_null);
  }
  else {
    watchdog('dosomething_northstar', 'User not updated : ' . $response->code, NULL, WATCHDOG_ERROR);
  }
}

/**
 * Get user profile data from Northstar for the given Drupal ID.
 *
 * @param int $drupal_id Drupal user id.
 * @return object
 */
function dosomething_northstar_get_northstar_user($drupal_id) {
  $northstar_user_info = cache_get('northstar_user_info_' . $drupal_id, 'cache_dosomething_northstar');

  if ($northstar_user_info) {
    $northstar_user_info = $northstar_user_info->data;
  }
  else {
    $northstar_user_info = dosomething_northstar_get_user_by_custom_index('drupal_id', $drupal_id);

    if (!empty($northstar_user_info->error)) {
      $error = sprintf("Error fetching Northstar user data, uid=%d: '%s'", $drupal_id, $northstar_user_info->error);
      watchdog_exception('northstar', new Exception($error));
    } else {
      cache_set('northstar_user_info_' . $drupal_id, $northstar_user_info, 'cache_dosomething_northstar', REQUEST_TIME + 60*60*24);
    }
  }

  return $northstar_user_info;
}

/**
 * Get a Northstar user for a given index & type. Useful for non Drupal ID lookups.
 * @param  string $index_type The type of index to query for (Email, Facebook, Mobile, _id)
 * @param  string $index The index to query for
 * @return object|null
 */
function dosomething_northstar_get_user_by_custom_index($index_type, $index) {
  $client = _dosomething_northstar_build_http_client();
  $response = drupal_http_request($client['base_url'] . '/users/' . $index_type . '/' . $index, [
    'headers' => $client['headers'],
    'method' => 'GET',
  ]);

  if ($response->code === "200") {
    return json_decode($response->data);
  }

  return NULL;
}

/**
 * Transform Drupal user fields into the appropriate schema for Northstar.
 *
 * @param $user - Drupal user object
 * @param $password - Unhashed password provided during registration.
 * @return array
 */
function dosomething_northstar_transform_user($user, $password = null) {
  // Optional fields
  $optional = [
    'birthdate' => 'field_birthdate',
    'first_name' => 'field_first_name',
    'last_name' => 'field_last_name',
  ];

  // Address fields
  $address = [
    'country' => 'country',
    'addr_street1' => 'thoroughfare',
    'addr_street2' => 'premise',
    'addr_city' => 'locality',
    'addr_state' => 'administrative_area',
    'addr_zip' => 'postal_code',
  ];

  $northstar_user = [
    'email'         => $user->mail,
    'mobile'        => dosomething_user_get_field('field_mobile', $user),
    'drupal_id'     => $user->uid,
    'language'      => $user->language,
    'created_at'    => $user->created,
  ];

  // Set values in ns_user if they are set.
  foreach ($optional as $ns_key => $drupal_key) {
    if (isset($user->{$drupal_key}[LANGUAGE_NONE][0]['value'])) {
      $northstar_user[$ns_key] = $user->$drupal_key[LANGUAGE_NONE][0]['value'];
    }
  }
  foreach ($address as $ns_key => $drupal_key) {
    $field = $user->field_address[LANGUAGE_NONE][0];

    if ($drupal_key == 'country') {
      $northstar_user[$ns_key] = $field[$drupal_key];
    } else if (isset($field[$drupal_key]['value'])) {
      $northstar_user[$ns_key] = $field[$drupal_key]['value'];
    }
  }

  // Provide either the hashed or unhashed password, depending on which is given.
  // If we only have hashed password, we can send that in the 'drupal_password'
  // field and Northstar can then verify via its DrupalPasswordHash class.
  if (! is_null($password)) {
    $northstar_user['password'] = $password;
  } else {
    $northstar_user['drupal_password'] = $user->pass;
  }

  // If user has a "1234565555@mobile" or "1234565555@mobile.import" placeholder
  // email address, don't send that field to Northstar (since it's made-up and
  // Northstar doesn't require every account to have an email like Drupal does).
  if(preg_match('/@mobile(\.import)?$/', $northstar_user['email'])) {
    unset($northstar_user['email']);
  }

  // Set the "source" for this user to Phoenix if they weren't
  // programmatically created through the API.
  if(empty($northstar_user['source'])) {
    $northstar_user['source'] = 'phoenix';
  }

  // Facebook ID is not in the field_ format
  if (isset($user->facebook_id)) {
    $northstar_user['facebook_id'] = $user->facebook_id;
  }

  return $northstar_user;
}

/**
 * Save the user's Northstar ID to their local profile.
 *
 * @param $uid - Drupal user ID
 * @param $northstar_response - Northstar user JSON response
 */
function dosomething_northstar_save_id_field($uid, $northstar_response) {
  $northstar_id = !empty($northstar_response->data->id) ? $northstar_response->data->id : 'NONE';
  $user = user_load($uid);

  $edit = [];
  dosomething_user_set_fields($edit, ['northstar_id' => $northstar_id]);
  user_save($user, $edit);
}

/**
 * If the log is enabled, log this request to the database.
 *
 * @param string $op - label for the operation being performed
 * @param object $user - the Drupal user
 * @param array $request_body - the body of the request
 * @param $response - response JSON
 */
function dosomething_northstar_log_request($op, $user, $request_body, $response) {
  if (!variable_get('dosomething_northstar_log')) return;

  // Don't log plaintext passwords.
  if (isset($request_body['password'])) {
    $request_body['password'] = '*****';
  }

  db_insert('dosomething_northstar_request_log')
    ->fields([
      'op' => $op,
      'uid' => $user->uid,
      'user_lang' => $user->language,
      'user_country' => $user->field_address[LANGUAGE_NONE][0]['country'],
      'fastly_country' => dosomething_settings_get_geo_country_code(),
      'request_values' => json_encode($request_body),
      'response_code' => $response->code,
      'response_values' => $response->data,
    ])
    ->execute();
}

/**
 * Return whether the response has a "successful" status code or not.
 *
 * @param $response
 * @return bool
 */
function _dosomething_northstar_is_successful_response($response) {
  $code = (int) $response->code;

  return $code >= 200 && $code <= 299;
}

/**
 * Build the drupal_http_request object for Northstar calls.
 * @returns array
 */
function _dosomething_northstar_build_http_client() {
  $base_url = NORTHSTAR_URL;
  if (getenv('DS_ENVIRONMENT') === 'local') {
    $base_url .=  ":" . NORTHSTAR_PORT;
  }
  $base_url .= '/' . NORTHSTAR_VERSION;

  $client = [
    'base_url' => $base_url,
    'headers' => [
      'X-DS-REST-API-Key' => NORTHSTAR_APP_KEY,
      'Content-Type' => 'application/json',
      'Accept' => 'application/json',
    ],
  ];

  return $client;
}
